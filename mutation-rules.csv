Category,Rule Idx,Rule Name,Transformation,SourceCodeLocation (prefix is always ./core/src/main/java/org/apache/calcite/rel/rules/),
Structure,0,AggregateExpandDistinctAggregatesRule,expands distinct aggregates,AggregateExpandDistinctAggregatesRule.java,
Structure,1,AggregateFilterTransposeRule,push an aggregate pass a filter,AggregateFilterTransposeRule.java,
Structure,2,AggregateJoinRemoveRule,remove unnecessary left join or right join,AggregateJoinRemoveRule,
Structure,3,AggregateJoinTransposeRule,Push aggregate functions through JOIN,AggregateJoinTransposeRule.java,
Structure,4,AggregateMergeRule,Merge aggregate functions,AggregateMergeRule.java,
Structure,5,AggregateProjectMergeRule,Push aggregate functions through projection,AggregateProjectMergeRule.java,
Structure,6,AggregatePullUpConstantsRule,Removes constant keys from an aggregate function,AggregatePullUpConstantsRule.java,
Structure,7,AggregateReduceFunctionsRule,Reduces aggregate functions to simpler forms,AggregateReduceFunctionsRule.java,
Structure,8,AggregateRemoveRule,Remove DISTINCT on unique columns,AggregateRemoveRule.java,
Structure,9,AggregateUnionTransposeRule,push aggregate through a union,AggregateUnionTransposeRule.java,
Structure,10,AggregateValuesRule,Reduces aggregate functions to empty values,AggregateValuesRule.java,
Structure,11,CalcMergeRule,Merges two projections with predicates into one,CalcMergeRule.java,
Structure,12,CalcRemoveRule,Removes a trivial projection without filter,CalcRemoveRule.java,
Structure,13,FilterAggregateTransposeRule,Push filter through GROUP BY,FilterAggregateTransposeRule.java,
Structure,14,FilterCalcMergeRule,Merges two filters with AND,FilterCalcMergeRule.java,
Expression,15,FilterDateRangeRules,"Convert EXTRACT, FLOOR, and CEIL in a filter into a date range",FilterDateRangeRules.java,
Structure,16,FilterJoinRule:FilterJoinRule:filter,Push filter expression through JOIN,FilterJoinRule.java,
Structure,17,FilterJoinRule:FilterJoinRule:no-filter,Pushes predicates in a Join into the inputs to the join,FilterJoinRule.java,
Structure,18,FilterMergeRule,Combines two filters,FilterMergeRule.java,
Structure,19,FilterProjectTransposeRule,push a filter pass a project,FilterProjectTransposeRule.java,
Structure,20,FilterRemoveIsNotDistinctFromRule.,replace is not distinct from with logically equivalent operations,FilterRemoveIsNotDistinctFromRule.java,
Structure,21,FilterSetOpTransposeRule,push filter past a setop,FilterSetOpTransposeRule.java,
Structure,22,FilterToCalcRule,converts a filter to a calc,FilterToCalcRule.java, 
Structure,23,Intersect,Reduce INTERSECT containing empty subquery,PruneEmptyRules.java,
Structure,24,Join(IncludingOuter)ProjectTransposeRule(Other-Project),pull up a project from join (right input is project),JoinProjectTransposeRule.java,
Structure,25,Join(IncludingOuter)ProjectTransposeRule(Project-Other),pull up a project from join (left input is project),JoinProjectTransposeRule.java,
Structure,26,Join(IncludingOuter)ProjectTransposeRule(Project-Project),pull up a project from join (both input are project),JoinProjectTransposeRule.java,
Structure,27,JoinExtractFilterRule,convert an inner join to a filter on top of an inner join,JoinExtractFilterRule.java,
Structure,28,JoinProjectTransposeRule(Other-Project),pull up a project from outer join (right input is project),JoinProjectTransposeRule.java,
Structure,29,JoinProjectTransposeRule(Project-Other),pull up a project from outer join (left input is project),JoinProjectTransposeRule.java,
Structure,30,JoinProjectTransposeRule(Project-Project),pull up a project from outer join (both input are project),JoinProjectTransposeRule.java,
Structure,31,JoinPushExpressionsRule,"Pushes down expressions in ""equal"" join condition",JoinPushExpressionsRule.java,
Structure,32,JoinPushTransitivePredicatesRule,push predicate from a join to its input,JoinPushTransitivePredicatesRule.java,
Structure,33,JoinUnionTransposeRule,pushes a join past a union,JoinUnionTransposeRule.java,
Structure,34,Minus,Reduce MINUS containing empty subquery,PruneEmptyRules.java,
Structure,35,ProjectCalcMergeRule,Merges a projection with a logicalcalc,ProjectCalcMergeRule.java,
Structure,36,ProjectFilterTransposeRule,push project pass a filter,ProjectFilterTransposeRule.java,
Structure,37,ProjectJoinRemoveRule,remove unnecessary left join or right join,ProjectJoinRemoveRule.java,
Structure,38,ProjectJoinTransposeRule,push a project pass a join,ProjectJoinTransposeRule.java,
Structure,39,ProjectMergeRule:force_mode,Merges two projections with different inputs,ProjectMergeRule.java,
Structure,40,ProjectRemoveRule,Reduce a projection that merely returns its input into its input,ProjectRemoveRule.java,
Structure,41,ProjectSetOpTransposeRule,push a project through a setop,ProjectSetOpTransposeRule.java,
Structure,42,ProjectToCalcRule,Match the projected table with its filter predicate,ProjectToCalcRule.java,
Structure,43,ProjectToWindowRule,slices a LogicalCalc into sections that contain windowed aggregate functions,ProjectToWindowRule.java,
Structure,44,ProjectToWindowRule: project,slices a project into secitons that contain windowed aggregate functions,ProjectToWindowRule.java,
Structure,45,ProjectWindowTransposeRule,push a project past a window,ProjectWindowTransposeRule.java,
Structure,46,PruneEmptyAggregate,Reduce aggregatefunctions containing empty subquery,PruneEmptyRules.java,
Structure,47,PruneEmptyFilter,Reduce a filter predicate if its input is empty,PruneEmptyRules.java,
Structure,48,PruneEmptyJoin(left),Converts a JOIN to empty if its left child is empty,PruneEmptyRules.java,
Structure,49,PruneEmptyJoin(right),Converts a JOIN to empty if its right child is empty,PruneEmptyRules.java,
Structure,50,PruneEmptyProject,Reduce a projection if its input is empty,PruneEmptyRules.java,
Structure,51,PruneEmptySort,Remove SORT on empty table,PruneEmptyRules.java,
Structure,52,PruneSortLimit0,Remove SORT if it has LIMIT 0,PruneEmptyRules.java,
Expression,53,ReduceExpressionsRule(Calc),Simplifies logicalcalcs,ReduceExpressionsRule.java,
Expression,54,ReduceExpressionsRule(Filter),Simplifies filter predicates,ReduceExpressionsRule.java,
Expression,55,ReduceExpressionsRule(Join),Push filter expression to JOIN condition,ReduceExpressionsRule.java,
Expression,56,ReduceExpressionsRule(Project),Simplifies projections,ReduceExpressionsRule.java,
Expression,57,ReduceExpressionsRule(Window),Simplifies projections,ReduceExpressionsRule.java,
Structure,58,SortJoinCopyRule,copy a sort past a join without its limit and offset,SortJoinCopyRule.java,
Structure,59,SortJoinTransposeRule,Propagate LIMIT through LEFT JOIN,SortJoinTransposeRule.java,
Structure,60,SortProjectTransposeRule,Push a SORT through projection,SortProjectTransposeRule.java,
Structure,61,SortRemoveConstantKeysRule,Remove SORT on constant column,SortRemoveConstantKeysRule.java,
Structure,62,SortUnionTransposeRule,push a sort past a union,SortUnionTransposeRule.java,
Structure,63,SubQueryRemoveRule,"converts IN, EXISTS and scalar sub-queries into joins.",SubQueryRemoveRule.java,
Structure,64,Union,Reduce UNION containing empty subquery,PruneEmptyRules.java,
Structure,65,UnionToDistinctRule,Transforms a UNION into a DISTINCT on top of a UNION ALL,UnionToDistinctRule.java,
Expression,66,ValuesReduceRule(Filter),folds filters into an underlying values,"ValuesReduceRule,java",
Structure,67,UnionPullUpConstantsRule,Pulls up constants through a Union operator,UnionPullUpConstantsRule.java,
Expression,68,ValuesReduceRule(Project),folds projections into an underlying values,"ValuesReduceRule,java",
Structure,69,AggregateCaseToFilterRule,convert CASE-style filtered aggregates into true filtered aggregates,AggregateCaseToFilterRule.java,
Structure,70,AggregateUnionAggregateRule,pull aggregates into one from union,AggregateUnionAggregateRule.java,
Structure,71,ProjectCorrelateTransposeRule,Push Project under Correlate to apply on Correlate's left and right child,ProjectCorrelateTransposeRule.java,
Structure,72,AggregateJoinJoinRemoveRule,remove unnecessary nested left join or right join,AggregateJoinJoinRemoveRule.java,
Structure,73,ProjectJoinJoinRemoveRule,remove unnecessary nested left join or right join,ProjectJoinJoinRemoveRule.java,
Structure,74,UnionMergeRule,combining two union all intot a single,UnionMergeRule.java,